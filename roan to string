class Solution {
public:
    int romanToInt(string s) {
        // Map to store Roman numerals and their integer values
        unordered_map<char, int> roman = {
            {'I', 1},
            {'V', 5},
            {'X', 10},
            {'L', 50},
            {'C', 100},
            {'D', 500},
            {'M', 1000}
        };
        
        int total = 0;
        int n = s.length();
        
        // Traverse through the string
        for (int i = 0; i < n; i++) {
            // Check if the current character is less than the next character
            if (i < n - 1 && roman[s[i]] < roman[s[i + 1]]) {
                // Subtract if the current numeral is smaller than the next
                total -= roman[s[i]];
            } else {
                // Otherwise, add the current numeral's value
                total += roman[s[i]];
            }
        }
        
        return total;
    }
};
